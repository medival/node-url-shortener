name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  prequisites:
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  clone-code:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  configure-app:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Configure APP
        run: |
          ls -lah
          sed -i 's|BASE_URL|${{ env.BASE_URL }}|g' api/controllers/UrlController.js
          sed -i 's|DATABASE_HOST|${{ env.DATABASE_HOST }}|g' config/env/*.js
          sed -i 's|DATABASE_NAME|${{ env.DATABASE_NAME }}|g' config/env/*.js
          sed -i 's|DATABASE_USERNAME|${{ env.DATABASE_USERNAME }}|g' config/env/*.js
          sed -i 's|DATABASE_PASSWORD|${{ secrets.DATABASE_PASSWORD }}|g' config/env/*.js

  build-image:
    runs-on: ubuntu-latest
    needs: [docker-login, clone-code, configure-app]
    steps:
      - name: Build the image
        run: docker build . --file Dockerfile --tag ${{ vars.DOCKER_USERNAME }}/${{ vars.APP_NAME }}:${{ env.SHORT_SHA }}

  push-image:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Push the image
        run: docker push ${{ vars.DOCKER_USERNAME }}/${{ vars.APP_NAME }}:${{ env.SHORT_SHA }}

  deploy-image:
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      - name: Deploy to Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/project3
            sed -i '8s|.*|    image: ${{ vars.DOCKER_USERNAME }}/${{ vars.APP_NAME }}:${{ env.SHORT_SHA }}|' docker-compose.yml
            docker-compose down
            docker-compose up -d
            docker ps -a
